@import "opoloo_config.css.scss";

@function gridColumnWidth() {
    @return $gridMaxWidth / $gridColumnCount;
}
// Grid calculations
@function gridColumnWidthCalc($colNumber) {
    // Is correct
    @if $gridGutterWidth == 0 {
        @return percentage($colNumber / $gridColumnCount);
    }
    // Is incorrect
    @else {
        @return percentage( (($colNumber / $gridColumnCount) - gutterCalc(false) ) );
    }
}

// Accepts a number of columns that a block should span.
// Returns a percentage width for that block.
@mixin columns($columnSpan: 1) {
    $number-of-blocks-in-container: $gridColumnCount / $columnSpan;
    $total-width-of-all-gutters:    gutterCalc(false) * ($number-of-blocks-in-container - 1);
    $total-width-of-all-blocks:     1 - $total-width-of-all-gutters;
    $width-of-a-single-block:       $total-width-of-all-blocks / $number-of-blocks-in-container;

    width:                          percentage( $width-of-a-single-block );
}

@function gutterCalc($showUnit: true) {
    @if $showUnit == true {
        @return percentage( $gridGutterWidth / $gridMaxWidth );
    } @else {
        @return $gridGutterWidth / ( $gridMaxWidth - ($gridMargin * 2) );
    }
}

@mixin gridColumn() {
    @if $gridGutterWidth > 0 {
        margin-left: gutterCalc();
    }
    @if $gridColumnPadding > 0 {
        padding: $gridColumnPadding + px;
    }
    float: left;
    min-height: 30px;
    position: relative;
    clear: none;
    &:first-child {
        margin-left: 0;
    }
}
@mixin clearfix {
    *zoom: 1;

    &:before,
    &:after {
        content: " ";
        display: table;
    }

    &:after {
        clear: both;
    }
}
@for $i from 1 to $gridColumnCount + 1 {
    .span#{$i}  { @include columns($i); }
}



* {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    -ms-box-sizing: border-box;
    box-sizing: border-box;
    -webkit-transition:all 0.12s ease-in-out;
    -moz-transition:all 0.12s ease-in-out;
    -o-transition:all 0.12s ease-in-out;
    -ms-transition:all 0.12s ease-in-out;
    transition:all 0.12s ease-in-out;
}

.container {
    padding-left: $gridMargin + px;
    padding-right: $gridMargin + px;
    width: 95%;
    max-width: $gridMaxWidth + px;
    margin: 0 auto;
}
.row {
    margin-bottom: 10px;
    @include clearfix();
}
.col {
    @include gridColumn();
}
.col + .col:last-child { float: right; }
.col + .col.end { float: left; }
